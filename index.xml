<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Armin Sobhani</title><link>https://arminsobhani.ca/</link><description>Recent content on Armin Sobhani</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 27 Mar 2023 14:20:04 -0400</lastBuildDate><atom:link href="https://arminsobhani.ca/index.xml" rel="self" type="application/rss+xml"/><item><title>Back to Black</title><link>https://arminsobhani.ca/posts/random/back_to_black/</link><pubDate>Mon, 27 Mar 2023 14:20:04 -0400</pubDate><guid>https://arminsobhani.ca/posts/random/back_to_black/</guid><description>Lately, I&amp;rsquo;ve been noticing there are more and more black strands among my now almost completely grey hair. I never asked anyone else&amp;rsquo;s opinion about it simply because my impression was that&amp;rsquo;s just my imagination. That all changed yesterday&amp;hellip;
Yesterday, in my monthly routine haircut, as soon as my barber who is a very sharp (mentally and instrumentally) Asian lady started to trim my hair, completely to my surprise, asked me if I have noticed my hair is backing to black cause she can tell for sure it is!</description></item><item><title>Remote Development on Clusters with VSCode - Part II</title><link>https://arminsobhani.ca/posts/videos/vscode_remote_2/</link><pubDate>Wed, 07 Sep 2022 16:04:07 -0400</pubDate><guid>https://arminsobhani.ca/posts/videos/vscode_remote_2/</guid><description>I presented this webinar on September 7th, 2022 as a part of a series of regular biweekly General Interest Webinars ran by SHARCNET. Visual Studio Code (VSCode) is a free and open-source code editor developed by Microsoft for Windows, Linux, and macOS. It includes support for debugging, embedded Git version control, syntax highlighting, intelligent code completion, snippets, and code refactoring. In Part I of this seminar we covered configuring SSH agent and config file, version controlling with external repositories, providing makefile and CMake support and remote debugging on compute nodes using the proxy jump method:</description></item><item><title>Remote Development on Clusters with VSCode - Part I</title><link>https://arminsobhani.ca/posts/videos/vscode_remote_1/</link><pubDate>Wed, 12 Jan 2022 16:04:07 -0400</pubDate><guid>https://arminsobhani.ca/posts/videos/vscode_remote_1/</guid><description>I presented this webinar on January 12th, 2022 as a part of a series of regular biweekly General Interest Webinars ran by SHARCNET. Visual Studio Code (VSCode) is a free and open-source code editor developed by Microsoft for Windows, Linux, and macOS. It includes support for debugging, embedded Git version control, syntax highlighting, intelligent code completion, snippets, and code refactoring. It is also extensible and customizable, so users can install extensions to add new languages, themes, debuggers and change the editor&amp;rsquo;s keyboard shortcuts, and preferences.</description></item><item><title>Scalable Memory Allocation for Parallel Algorithms</title><link>https://arminsobhani.ca/posts/videos/sma/</link><pubDate>Wed, 17 Mar 2021 16:04:07 -0400</pubDate><guid>https://arminsobhani.ca/posts/videos/sma/</guid><description>I presented this webinar on March 17, 2021 as a part of a series of regular biweekly General Interest Webinars ran by SHARCNET. In a multithreaded C/C++ program, using standard non-threaded allocators, memory allocation can become a bottleneck. That is firstly caused by thread competition for a lock on a shared global heap, and secondly for caching effects. Programs that run this way are not scalable and may slow down as the number of cores increases.</description></item><item><title>How to Use C++ Parallel Algorithms in a Distributed Memory Setup (i.e. MPI)</title><link>https://arminsobhani.ca/posts/videos/pgas/</link><pubDate>Wed, 29 Jul 2020 16:04:07 -0400</pubDate><guid>https://arminsobhani.ca/posts/videos/pgas/</guid><description>I presented this webinar on July 29th, 2020 as a part of a series of regular biweekly General Interest Webinars ran by SHARCNET. Last year and earlier this year, SHARCNET presented two webinars introducing C++17 parallel algorithms (first webinar; second webinar). There was an interesting frequently asked question: is it possible to use them in an MPI setup? This seminar tries to address that question. First, there will be a very short intro to C++17 parallel algorithms followed by an overview of Partitioned Global Address Space (PGAS) parallel programming model.</description></item><item><title>Dipping into C++17 Parallel Algorithms with Intel's Parallel STL</title><link>https://arminsobhani.ca/posts/videos/parallel_stl/</link><pubDate>Wed, 27 Feb 2019 16:04:07 -0400</pubDate><guid>https://arminsobhani.ca/posts/videos/parallel_stl/</guid><description>I presented this webinar on February 27th, 2019 as a part of a series of regular biweekly General Interest Webinars ran by SHARCNET. If you are programming or have already developed with C++, there is a good chance that you have used Standard Template Library (STL) containers and algorithms in your codes. In that case, you can easily boost the performance of your existing codes with parallel algorithms introduced in C++17.</description></item><item><title>Harnessing the Power of Heterogeneous Computing using Boost.Compute + OpenCL</title><link>https://arminsobhani.ca/posts/videos/boost_compute/</link><pubDate>Wed, 15 Aug 2018 16:04:07 -0400</pubDate><guid>https://arminsobhani.ca/posts/videos/boost_compute/</guid><description>I presented this webinar on August 15th, 2018 as a part of a series of regular biweekly General Interest Webinars ran by SHARCNET. The Boost Compute library provides a C++ interface to multi-core CPU and GPGPU computing platforms based on OpenCL. It provides a high-level, STL-like API and is portable to a wide variety of parallel accelerators including GPUs, FPGAs, and multi-core CPUs. This seminar gives an overview of the library and demonstrates how to write and execute high-performance C++ applications on SHARCNET clusters.</description></item><item><title>Visual Studio Code – Your Next Coding Companion for Advanced Research Computing</title><link>https://arminsobhani.ca/posts/videos/vscode_1/</link><pubDate>Wed, 28 Feb 2018 16:04:07 -0400</pubDate><guid>https://arminsobhani.ca/posts/videos/vscode_1/</guid><description>I presented this webinar on February 28th, 2018 as a part of a series of regular biweekly General Interest Webinars ran by SHARCNET. Visual Studio Code (vscode) is a free and open-source code editor developed by Microsoft for Windows, Linux, and macOS. It includes support for debugging, embedded Git version control, syntax highlighting, intelligent code completion, snippets, and code refactoring. It is also extensible and customizable, so users can install extensions to add new languages, themes, debuggers and change the editor’s keyboard shortcuts, and preferences.</description></item><item><title>Automating Software Build Process using CMake - Part II</title><link>https://arminsobhani.ca/posts/videos/cmake_2/</link><pubDate>Wed, 26 Apr 2017 16:04:07 -0400</pubDate><guid>https://arminsobhani.ca/posts/videos/cmake_2/</guid><description>I presented this webinar on April 26th, 2017 as a part of a series of regular biweekly General Interest Webinars ran by SHARCNET. CMake is a cross-platform, free and open-source build system that allows you automatically build, test, verify, package and deploy software in a compiler-independent manner. In Part I of this seminar we introduced CMake and the first three steps of our tutorial:
Automating Software Build Process using CMake – Part I In Part II we will continue with more steps covering other techniques like adding options, correct way of finding Boost library, configuring header files, producing installation packages and so on.</description></item><item><title>Automating Software Build Process using CMake - Part I</title><link>https://arminsobhani.ca/posts/videos/cmake_1/</link><pubDate>Wed, 14 Sep 2016 16:04:07 -0400</pubDate><guid>https://arminsobhani.ca/posts/videos/cmake_1/</guid><description>I presented this webinar on September 14, 2016 as a part of a series of regular biweekly General Interest Webinars ran by SHARCNET. CMake is a cross-platform, free and open-source build system that allows you automatically build, test, verify, package and deploy software in a compiler-independent manner. CMake was originally created in 1999 for the Insight Toolkit (ITK) funded by the US National Library of Medicine (NLM) as part of the Visible Human Project and over the past 17 years has become the most popular build tool for C/C++ especially in the field of scientific research (e.</description></item><item><title>Programming with Wt - A C++ library for developing stateful and highly interactive web applications</title><link>https://arminsobhani.ca/posts/videos/wt/</link><pubDate>Wed, 24 Jun 2015 16:04:07 -0400</pubDate><guid>https://arminsobhani.ca/posts/videos/wt/</guid><description>I presented this webinar on June 24th, 2015 as a part of a series of regular biweekly General Interest Webinars ran by SHARCNET. If you need to expose a new HPC service or a brand new scientific methodology to outside community by developing a highly interactive web application but without gaining familiarity with ever-changing technologies such as HTML/XHTML, JavaScript, CSS, AJAX, CGI, DHTML, SVG/VML/Canvas, PHP, etc., this webinar is for you.</description></item></channel></rss>